package #(baseModelPackageName);

import com.jfinal.plugin.activerecord.Model;
import com.jfinal.plugin.activerecord.IBean;
import com.choxsu.common.generator.BaseModel;
/**
 * @author choxsu, do not modify this file.
 * table: #(tableMeta.name)
 * remarks: #(tableMeta.remarks)
 */
#if (generateChainSetter)
@SuppressWarnings({"serial", "unchecked"})
#else
@SuppressWarnings("serial")
#end
public abstract class #(tableMeta.baseModelName)<M extends #(tableMeta.baseModelName)<M>> extends BaseModel<M> {

    public static final String tableName = "#(tableMeta.name)";

#for(cm : tableMeta.columnMetas)
    #set(argName = javaKeyword.contains(cm.attrName) ? '_' + cm.attrName : cm.attrName)
    /**
     * #(cm.remarks == "" ? "该字段暂无注释" : cm.remarks)
     */
    private java.lang.String #(argName) = "#(cm.name)";
#end

#set(b = generateChainSetter)
#for(cm : tableMeta.columnMetas)

	#set(argName = javaKeyword.contains(cm.attrName) ? '_' + cm.attrName : cm.attrName)
    /**
     * #(cm.remarks == "" ? "该字段暂无注释" : "set" + cm.remarks)
     */
	public #(b ? 'M' : 'void') set#(firstCharToUpperCase(cm.attrName))(#(cm.javaType) #(argName)) {
		set(this.#(argName), #(argName));
		#if (b)
		return (M)this;
		#end
	}
	
	#set(getterOfModel = getterTypeMap.get(cm.javaType))
	#if (isBlank(getterOfModel))
		#set(getterOfModel = 'get')
	#end
    /**
     * #(cm.remarks == "" ? "该字段暂无注释" : "get" + cm.remarks)
     */
	public #(cm.javaType) get#(firstCharToUpperCase(cm.attrName))() {
		return #(getterOfModel)(#(argName));
	}

#end
}

